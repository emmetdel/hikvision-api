export interface DisarmAlarm {
    statusCode: number,
    statusString: string,
    subStatusCode: string,
    errorCode: number,
    errorMsg: string
}

export const enum Endpoint {
    disarm = '/ISAPI/SecurityCP/control/disarm/1',
    armHomeMode = '/ISAPI/SecurityCP/control/arm/1?ways=stay',
    armAwayMode = '/ISAPI/SecurityCP/control/arm/1?ways=away',
    subSystemStatus = '/ISAPI/SecurityCP/status/subSystems',
    alertStream = '/ISAPI/Event/notification/alertStream',
    //     "/ISAPI/SecurityCP/BasicParam/AlarmLampSchedTimeConfig",
    //     "/ISAPI/SecurityCP/BasicParam/AlarmLampSchedTimeConfig/capabilities",
    //     "/ISAPI/SecurityCP/BasicParam/audioFileList/capabilities",
    //     "/ISAPI/SecurityCP/BasicParam/audioFileList/type=",
    //     "/ISAPI/SecurityCP/BasicParam/audioInOutCfg",
    //     "/ISAPI/SecurityCP/BasicParam/audioInOutCfg/capabilities",
    detectorCfg = "/ISAPI/SecurityCP/BasicParam/DetectorCfg",
    detectorCfgCap = "/ISAPI/SecurityCP/BasicParam/DetectorCfg/capabilities",
    //     "/ISAPI/SecurityCP/BasicParam/ZoneAssociatedDetectorCfg",
    //     "/ISAPI/SecurityCP/BasicParam/ZoneAssociatedDetectorCfg/capabilities",
    caps = "/ISAPI/SecurityCP/capabilities",
    checkResultCap = "/ISAPI/SecurityCP/CheckResult/capabilities",
    checkResult = "/ISAPI/SecurityCP/CheckResult",
    //     "/ISAPI/SecurityCP/Configuration/ARC/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/ARC/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/ARC",
    confCap = "/ISAPI/SecurityCP/Configuration/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/card/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/card/currentAdd",
    //     "/ISAPI/SecurityCP/Configuration/card/currentAddAsyn",
    //     "/ISAPI/SecurityCP/Configuration/card/mode/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/card/mode",
    //     "/ISAPI/SecurityCP/Configuration/card/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/card",
    //     "/ISAPI/SecurityCP/Configuration/cardReader/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/cardReader/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/cardReader/currentAddAsyn",
    //     "/ISAPI/SecurityCP/Configuration/cardReader/mode/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/cardReader/mode",
    //     "/ISAPI/SecurityCP/Configuration/cardReader",
    //     "/ISAPI/SecurityCP/Configuration/curtainInfraredDetector/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/curtainInfraredDetector/zone/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/curtainInfraredDetector",
    //     "/ISAPI/SecurityCP/Configuration/deviceTime/capabilities",
    deviceTime = "/ISAPI/SecurityCP/Configuration/deviceTime",
    evtRecordCap = "/ISAPI/SecurityCP/Configuration/eventRecord/channels/2/capabilities",
    evtRecord = "/ISAPI/SecurityCP/Configuration/eventRecord/channels/1",
    //     "/ISAPI/SecurityCP/Configuration/extensionModule/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/extensionModule/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/extensionModule",
    //     "/ISAPI/SecurityCP/Configuration/faultCheckCfg/capabilities",
    faultCheck = "/ISAPI/SecurityCP/Configuration/faultCheckCfg",
    //     "/ISAPI/SecurityCP/Configuration/glassBreakDetector/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/glassBreakDetector",
    glassBreakDetector = "/ISAPI/SecurityCP/Configuration/glassBreakDetector/zone/5",
    //     "/ISAPI/SecurityCP/Configuration/indoorDualTechnologyDetector/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/indoorDualTechnologyDetector/zone/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/indoorDualTechnologyDetector",
    //     "/ISAPI/SecurityCP/Configuration/keypad/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/keypad/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/keypad",
    //     "/ISAPI/SecurityCP/Configuration/keypadAddList/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/keypadAddList",
    //     "/ISAPI/SecurityCP/Configuration/keypadFaultProcessCfg/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/keypadFaultProcessCfg/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/keypadFaultProcessCfg",
    //     "/ISAPI/SecurityCP/Configuration/magneticContact/capabilities",
    magContact = "/ISAPI/SecurityCP/Configuration/magneticContact/zone/0",
    //     "/ISAPI/SecurityCP/Configuration/magneticContact",
    //     "/ISAPI/SecurityCP/Configuration/messageSendARC/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/messageSendARCList",
    //     "/ISAPI/SecurityCP/Configuration/messageSendARC",
    sendCloudCap = "/ISAPI/SecurityCP/Configuration/messageSendCloud/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/messageSendCloud",
    sendDirectCap = "/ISAPI/SecurityCP/Configuration/messageSendDirect/capabilities",
    sendDirect = "/ISAPI/SecurityCP/Configuration/messageSendDirect",
    //     "/ISAPI/SecurityCP/Configuration/messageSendMail/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/messageSendMail",
    //     "/ISAPI/SecurityCP/Configuration/messageSendMail/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/messageSendPhone/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/messageSendPhone/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/messageSendPhone",
    //     "/ISAPI/SecurityCP/Configuration/messageSendPhoneAnvanced/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/messageSendPhoneAnvanced/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/messageSendPhoneAnvanced",
    //     "/ISAPI/SecurityCP/Configuration/muteVoicePlanCFG/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/muteVoicePlanCFG",
    //     "/ISAPI/SecurityCP/Configuration/notRelateZones/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/notRelateZones",
    //     "/ISAPI/SecurityCP/Configuration/outputModules/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/outputModules/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/outputModules",
    // outputs = "/ISAPI/SecurityCP/Configuration/outputs/1",
    //     "/ISAPI/SecurityCP/Configuration/outputs/capabilities",
    outputs = "/ISAPI/SecurityCP/Configuration/outputs",
    //     "/ISAPI/SecurityCP/Configuration/outputsModule/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/outputsModule/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/outputsModule",
    //     "/ISAPI/SecurityCP/Configuration/panicButton/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/panicButton/zone/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/panicButton",
    //     "/ISAPI/SecurityCP/Configuration/passiveInfraredDetector/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/passiveInfraredDetector/zone/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/passiveInfraredDetector",
    pircamCap = "/ISAPI/SecurityCP/Configuration/pircam/capabilities",
    pircamZone = "/ISAPI/SecurityCP/Configuration/pircam/zone/3",
    //     "/ISAPI/SecurityCP/Configuration/pircam/zone",
    //     "/ISAPI/SecurityCP/Configuration/PSTNCfg/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/PSTNCfg/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/PSTNCfg",
    //     "/ISAPI/SecurityCP/Configuration/publicSubSys/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/publicSubSys/capabilities",
    publicSubSys = "/ISAPI/SecurityCP/Configuration/publicSubSys",
    //     "/ISAPI/SecurityCP/Configuration/registerMode/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/registerMode",
    //     "/ISAPI/SecurityCP/Configuration/remoteCfgPermissonUserName/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/remoteCfgPermissonUserName",
    //     "/ISAPI/SecurityCP/Configuration/remoteCtrl/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/remoteCtrl/currentAdd",
    //     "/ISAPI/SecurityCP/Configuration/remoteCtrl/currentAddAsyn",
    //     "/ISAPI/SecurityCP/Configuration/remoteCtrl/mode/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/remoteCtrl/mode",
    //     "/ISAPI/SecurityCP/Configuration/remoteCtrl/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/remoteCtrl",
    //     "/ISAPI/SecurityCP/Configuration/repeaters/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/repeaters/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/repeaters",
    //     "/ISAPI/SecurityCP/Configuration/signalStrengthDetection/currentAsyn",
    //     "/ISAPI/SecurityCP/Configuration/signalStrengthDetection/mode/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/signalStrengthDetection/mode",
    //     "/ISAPI/SecurityCP/Configuration/slimMagneticContact/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/slimMagneticContact/zone/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/slimMagneticContact",
    subSysConf = "/ISAPI/SecurityCP/Configuration/subSys/1",
    subSysCap = "/ISAPI/SecurityCP/Configuration/subSys/capabilities",
    subSys = "/ISAPI/SecurityCP/Configuration/subSys",
    //     "/ISAPI/SecurityCP/Configuration/subSysTime/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/subSysTime/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/subSysTime",
    sysManageCap = "/ISAPI/SecurityCP/Configuration/systemManage/capabilities",
    sysManage = "/ISAPI/SecurityCP/Configuration/systemManage",
    //     "/ISAPI/SecurityCP/Configuration/users/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/users/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/users",
    //     "/ISAPI/SecurityCP/Configuration/wirelessSiren/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/wirelessSiren/<ID>",
    //     "/ISAPI/SecurityCP/Configuration/wirelessSiren",
    //     "/ISAPI/SecurityCP/Configuration/wirelessSiren/currentAddAsyn",
    //     "/ISAPI/SecurityCP/Configuration/wirelessSiren/mode/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/wirelessSiren/mode",
    //     "/ISAPI/SecurityCP/Configuration/zoneAlarmTimeFilter/capabilities",
    //     "/ISAPI/SecurityCP/Configuration/zoneAlarmTimeFilter",
    zonesCap = "/ISAPI/SecurityCP/Configuration/zones/capabilities",
    zones = "/ISAPI/SecurityCP/Configuration/zones/",
    //     "/ISAPI/SecurityCP/Configuration/zones",
    //     "/ISAPI/SecurityCP/control/bypassRecover/<ID>",
    ctrlOutputs = "/ISAPI/SecurityCP/control/outputs",
    //     "/ISAPI/SecurityCP/control/outputs/<ID>",
    //     "/ISAPI/SecurityCP/control/clearAlarm/<ID>",
    //     "/ISAPI/SecurityCP/control/arm/<ID>?ways=<string>&format=json",
    //     "/ISAPI/SecurityCP/Control/audioFile/name=",
    //     "/ISAPI/SecurityCP/control/disarm/<ID>",
    //     "/ISAPI/SecurityCP/control/bypassRecover",
    //     "/ISAPI/SecurityCP/control/bypass",
    //     "/ISAPI/SecurityCP/control/bypass/<ID>",
    controlCap = "/ISAPI/SecurityCP/control/capabilities",
    //     "/ISAPI/SecurityCP/control/siren/<ID>",
    sysFault = "/ISAPI/SecurityCP/control/systemFault",
    pircamFileExportCap = "/ISAPI/SecurityCP/FileExport/pircam/capabilities",
    //     "/ISAPI/SecurityCP/FileExport/pircam",
    //     "/ISAPI/SecurityCP/Log/search",
    pircamChannels = "/ISAPI/SecurityCP/pircam/picture/channels/3/mode",
    //     "/ISAPI/SecurityCP/pircam/picture/channels/<ID>",
    //     "/ISAPI/SecurityCP/pircam/picture/mode/capabilities",
    //     "/ISAPI/SecurityCP/pircam/picture/channels/<ID>/currentAddAsyn",
    //     "/ISAPI/SecurityCP/status/acPowerStatus",
    armStatus = "/ISAPI/SecurityCP/status/armStatus",
    //     "/ISAPI/SecurityCP/status/batteries",
    statusCap = "/ISAPI/SecurityCP/status/capabilities",
    //     "/ISAPI/SecurityCP/status/cardReaderStatus",
    //     "/ISAPI/SecurityCP/status/communication",
    exDevStatus = "/ISAPI/SecurityCP/status/exDevStatus",
    //     "/ISAPI/SecurityCP/status/extensionModuleStatus",
    hostStatus = "/ISAPI/SecurityCP/status/host",
    hostItself = "/ISAPI/SecurityCP/status/hostItself",
    //     "/ISAPI/SecurityCP/status/keypadStatus",
    outModStatus = "/ISAPI/SecurityCP/status/outputModStatus",
    outStatus = "/ISAPI/SecurityCP/status/outputStatus",
    //     "/ISAPI/SecurityCP/status/repeaterStatus",
    //     "/ISAPI/SecurityCP/status/sirenStatus",
    subSystemsStatus = "/ISAPI/SecurityCP/status/subSystems/",
    sysFaultStatus = "/ISAPI/SecurityCP/status/systemFault",
    zoneStatus = "/ISAPI/SecurityCP/status/zones",
    surroundEnvCfgCap = "/ISAPI/SecurityCP/surroundEnvironmentCfg/capabilities",
    //     "/ISAPI/SecurityCP/surroundEnvironmentCfg",
    //     "/ISAPI/SecurityCP/sysAutoCheckTimeCfg/capabilities",
    //     "/ISAPI/SecurityCP/sysAutoCheckTimeCfg",
    //     "/ISAPI/SecurityCP/sysCheckManually/capabilities",
    //     "/ISAPI/SecurityCP/sysCheckManually",
    //     "/ISAPI/SecurityCP/videoBroadcast/customizeUpload",
    //     "/ISAPI/SecurityCP/voicePrompt/capabilities",
    voicePrompt = "/ISAPI/SecurityCP/voicePrompt",
    sysCap = "/ISAPI/System/capabilities",
    //     "/ISAPI/System/moduleLock/config/capabilities",
    //     "/ISAPI/System/moduleLock/config",
    //     "/ISAPI/System/moduleLock/unlockModule"
}

export interface ZoneStatus {
    ZoneList?: ZoneListEntity[] | null;
}
export interface ZoneListEntity {
    Zone: Zone;
}
export interface Zone {
    id: number;
    name: string;
    status: string;
    tamperEvident: boolean;
    shielded: boolean;
    bypassed: boolean;
    armed: boolean;
    isArming: boolean;
    alarm: boolean;
    charge: string;
    chargeValue: number;
    signal: number;
    temperature: number;
    subSystemNo: number;
    linkageSubSystem?: number[] | null;
    detectorType: string;
    model: string;
    stayAway: boolean;
    zoneType: string;
    InputList?: InputListEntity[] | null;
    isViaRepeater: boolean;
    zoneAttrib: string;
    version: string;
    repeaterName?: string | null;
}
export interface InputListEntity {
    id: number;
    enabled: boolean;
    mode: string;
}
